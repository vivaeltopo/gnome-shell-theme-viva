.quick-settings {
  padding: $base_padding*2;
  border-radius: $base_border_radius;

  .icon-button, .button {
    padding: $base_padding*2;
  }
}

.quick-settings-grid {
  spacing-rows: $base_padding*2;
  spacing-columns: $base_padding*2;
}

.quick-toggle {
  min-width: 12em;
  max-width: 12em;
  min-height: 40px;
  border:none;

  border-radius: $base_border_radius;
  spacing: $base_padding;
  padding: $base_padding;
  font-weight: normal;
  box-shadow: $viva_box_shadow;
  text-shadow: 1px 2px rgba(0, 0, 0, 0.6);

  & > StBoxLayout { spacing: $base_padding; }

  /* Move padding into the box; this is to allow menu arrows
     to extend to the border */
  &.button { padding: 0; }
  & > StBoxLayout { padding: 0 $base_padding*2; }
  &:ltr > StBoxLayout { padding-left: $base_padding*2; }
  &:rtl > StBoxLayout { padding-right: $base_padding*2; }

  &:focus, &:hover {
    color: $selected_fg_color;
    background-gradient-direction: vertical;
    background-gradient-start: $viva_gradient_2 !important;
    background-gradient-end: $viva_gradient_1 !important;
  }

  &:checked {
    .quick-toggle-label { font-weight: normal; }
    color: $selected_fg_color;
    background-gradient-direction: vertical;
    background-gradient-start: $viva_gradient_2 !important;
    background-gradient-end: $viva_gradient_1 !important;

    &:focus, &:hover, &:active {
      background-gradient-direction: vertical;
      background-gradient-start: $viva_color1 !important;
      background-gradient-end: $viva_color2 !important;
    }

  }

  &.selected {
    background-color: transparentize(white, 0.9);
    color: $fg_color;
  }

  &:active {
    color: $selected_fg_color;
    background-gradient-direction: vertical;
    background-gradient-start: $viva_color1 !important;
    background-gradient-end: $viva_color2 !important;
  }

  &:insensitive {
    color: transparentize($fg_color, 0.5);
  }

  .quick-toggle-label { font-weight: normal; }
  .quick-toggle-icon, .quick-toggle-arrow { icon-size: $base_icon_size; }
}

.quick-menu-toggle {
  &:ltr > StBoxLayout { padding-right: 0; }
  &:rtl > StBoxLayout { padding-left: 0; }

  & .quick-toggle-arrow {
    background-color: transparent;
    padding: $base_padding $base_padding*1.75;

    &:ltr { border-radius: 0 $base_border_radius $base_border_radius 0; }
    &:rtl { border-radius: $base_border_radius 0 0 $base_border_radius; }
  }
}

.quick-slider {
  padding: 0 $base_padding;

  & > StBoxLayout { spacing: $base_padding; }

  .slider-bin {
    &:focus {@include button(focus);}
    min-height: 16px; // slider size
    padding: $base_padding;
    border-radius: $base_border_radius;
  }
  .quick-toggle-icon { icon-size: $base_icon_size; }
  .icon-button { background-color: transparent; }
}

.quick-toggle-menu {
  background-color: transparent;
  box-shadow: none;
  border: 0px solid transparent;
  border-radius: $base_border_radius;
  margin: 0;
  padding: 2.5*$base_padding;

  .popup-menu-item > StIcon { -st-icon-style: symbolic; }

  .popup-menu-item { padding: 2*$base_padding; }

  & .header {
    spacing-rows: 0.5 * $base_padding;
    spacing-columns: $base_padding*2;
    padding-bottom: 2 * $base_padding;

    & .icon {
      icon-size: $base_icon_size*1.5; // a non-standard symbolic size but ok
      border-radius: $base_border_radius;
      padding: 1.5 * $base_padding;
      background-gradient-direction: vertical;
      background-gradient-start: $viva_gradient_2 !important;
      background-gradient-end: $viva_gradient_1 !important;

      &.active {
        background-gradient-direction: vertical;
        background-gradient-start: $viva_color1 !important;
        background-gradient-end: $viva_color2 !important;
      }
    }

    & .title {
      @extend %title_3;
    }

    & .subtitle {
      @extend %caption_heading;
    }
  }
}

.quick-toggle-menu-container {
}

.quick-settings-system-item {
  & > StBoxLayout { spacing: 2 * $base_padding; }

  .icon-button {
    color: lighten($fg_color, 15%);
    border-radius: $base_border_radius;
    padding: $base_padding*2;
    margin: 0;
    background: transparent;

    &:focus, &:hover {
      background-gradient-direction: vertical;
      background-gradient-start: $viva_gradient_2;
      background-gradient-end: $viva_gradient_1;
    }

    &:active {
      background-gradient-direction: vertical;
      background-gradient-start: $viva_color1;
      background-gradient-end: $viva_color2;
    }
  }

  .icon-button > StIcon { -st-icon-style: symbolic;}

  & .power-item {
    min-height: 0;
    min-width: 0;

    &:insensitive {
      @include button(normal);
      background-color: transparent;
    }
  }
}

.nm-network-item {
  .wireless-secure-icon { icon-size: 0.5 * $base_icon_size; }
}
